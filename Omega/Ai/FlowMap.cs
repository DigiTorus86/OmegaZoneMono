using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Omega.Ai
{
    public class FlowMap
    {
        public Vector2[,] Vectors;
        private int[,,] data;

        public FlowMap(bool invert = false)
        {
           int[,,] data = {    //   1        2        3        4        5        6        7        8        9       10       11       12       13       14       15       16       17       18       19       20
                       /*  1 */ { { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 1, 1}, { 0, 1}, { 0, 1}, { 0, 1}, { 0, 1}, {-1, 1}  },
                       /*  2 */ { { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 1}, { 1, 1}, { 0, 1}, { 0, 1}, { 0, 1}, { 0, 1}, {-1, 1}  },
                       /*  3 */ { { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 0}, { 1, 1}, { 0, 1}, { 0, 1}, { 0, 1}, { 0, 1}, {-1, 1}  },
                       /*  4 */ { { 1,-1}, { 1,-1}, { 1,-1}, { 1,-1}, { 1,-1}, { 0,-1}, { 1,-1}, { 1,-1}, { 1,-1}, { 1,-1}, { 1,-1}, { 1,-1}, { 1,-1}, { 1,-1}, { 1, 1}, { 0, 1}, { 0, 1}, { 0, 1}, { 0, 1}, {-1, 1}  },
                       /*  5 */ { { 1,-1}, { 1,-1}, { 1,-1}, { 1,-1}, { 0,-1}, {-1,-1}, {-1,-1}, { 0,-1}, { 0,-1}, { 0,-1}, { 0,-1}, { 0,-1}, { 0,-1}, { 1,-1}, { 1, 1}, { 0, 1}, { 0, 1}, { 0, 1}, {-1, 1}, {-1, 1}  },
                       /*  6 */ { { 1,-1}, { 1,-1}, { 1,-1}, { 0,-1}, { 0,-1}, {-1,-1}, {-1, 0}, { 0, 0}, { 0, 0}, { 0, 0}, { 0, 0}, { 0, 0}, { 0, 0}, { 1, 0}, { 1, 1}, { 0, 1}, { 0, 1}, {-1, 1}, {-1, 1}, {-1, 1}  },
                       /*  7 */ { { 1,-1}, { 1,-1}, { 0,-1}, { 0,-1}, { 0,-1}, {-1,-1}, {-1, 1}, { 0, 1}, { 0, 1}, { 0, 1}, { 0, 1}, { 0, 1}, { 0, 1}, { 1, 1}, { 1, 1}, { 0, 1}, {-1, 1}, {-1, 1}, {-1, 1}, {-1, 1}  },
                       /*  8 */ { { 1,-1}, { 0,-1}, { 0,-1}, { 0,-1}, { 0,-1}, {-1,-1}, {-1, 1}, {-1, 1}, {-1, 1}, {-1, 1}, {-1, 1}, {-1, 1}, {-1, 1}, {-1, 1}, { 0, 1}, {-1, 1}, {-1, 1}, {-1, 1}, {-1, 1}, {-1, 1}  },
                       /*  9 */ { { 1,-1}, { 0,-1}, { 0,-1}, { 0,-1}, {-1,-1}, {-1,-1}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}  },
                       /* 10 */ { { 1,-1}, { 0,-1}, { 0,-1}, { 0,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}, {-1, 0}  },
                       /* 11 */ { { 1,-1}, { 0,-1}, { 0,-1}, { 0,-1}, { 0,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}, {-1,-1}  }
            };

            Vectors = new Vector2[11, 20];

            if (invert)
            {
                for (int row = 0; row < 11; row++)
                {
                    for (int col = 0; col < 20; col++)
                    {
                        Vectors[11 - row, col] = new Vector2(data[row, col, 0], data[row, col, 1] * -1);
                    }
                }
            }
            else
            {
                for (int row = 0; row < 11; row++)
                {
                    for (int col = 0; col < 20; col++)
                    {
                        Vectors[row, col] = new Vector2(data[row, col, 0] * .01f, data[row, col, 1] * .01f);
                    }
                }
            }
        }
    }
}
